<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trip.mapper.BoardMapper">

	<select id="selectBoardList" parameterType="int" resultType="trip.dto.BoardDTO">
		select board_no,user_id,title,content,write_date,board_like,board_count,comment_count
    	from (select ceil (rownum /7) as pagenum,board_no,user_id,title,content,write_date,board_like,board_count,comment_count
   	 	from (select b.*, nvl(c.comment_count,0) as comment_count 
    	from board b,(select board_no, count(*) as comment_count 
    	from board_comment group by board_no) c
    	where b.board_no = c.board_no(+)
		<choose>
			<when test="mode.equals('board_like')">
				order by b.board_like desc))
			</when>
			<otherwise>
				order by b.board_no desc))
			</otherwise>
		</choose>
		where pagenum = #{pageNo}
	</select>

	<select id="selectCount" resultType="int">
		select count(*) from board
	</select>

	<select id="selectBoard" parameterType="int" resultType="trip.dto.BoardDTO">
		select * from board where board_no = #{boardNo}
	</select>

	<select id="selectBoardComment" parameterType="int" resultType="comment">
		select * from board_comment where board_no = #{boardNo}
	</select>

	<insert id="insertBoardComment" parameterType="trip.dto.CommentDTO">
		insert into board_comment(comment_no, board_no, user_id, content) values(board_comment_seq.nextval, #{boardNo}, #{id}, #{content})
	</insert>

	<select id="newBoardNo" resultType="int">
		select board_no_seq.nextval from dual
	</select>
	<insert id="insertBoard" parameterType="trip.dto.BoardDTO">
		insert into board(board_no,user_id,title,content) values(#{boardNo},#{id},#{title},#{content})
	</insert>
	
	<update id="addBoardLike" parameterType="map">
		update board set 
		<choose>
			<when test="mode == 0">
				board_like = board_like + 1
			</when>
		</choose>
		where board_no = #{boardNo}
	</update>
	
	<select id="selectSearchBoard" parameterType="map" resultType="trip.dto.BoardDTO">
		select board_no, user_id, title, content, write_date, board_like, board_count from board where
		<choose>
			<when test="kind.equals('title')">
				title like '%'||#{search}||'%' order by board_no desc
			</when>
			<when test="kind.equals('id')">
				upper(user_id) like ('%'||upper(#{search})||'%') order by board_no desc
			</when>
			<otherwise>
				content like '%'||#{search}||'%' order by board_no desc
			</otherwise>
		</choose>
	</select>
	<!-- <select id="selectSearchBoard" parameterType="map" resultType="trip.dto.BoardDTO">
		select board_no,user_id,title,content,write_date,board_like,board_count,comment_count
    	from (select ceil (rownum /7) as pagenum,board_no,user_id,title,content,write_date,board_like,board_count,comment_count
   	 	from (select b.*, nvl(c.comment_count,0) as comment_count 
    	from board b,(select board_no, count(*) as comment_count 
    	from board_comment group by board_no) c
    	where b.board_no = c.board_no(+) order by b.board_no desc)
    	<choose>
			<when test="kind.equals('title')">
				where title like '%'||#{search}||'%' order by board_no desc)
			</when>
			<when test="kind.equals('id')">
				where upper(user_id) like ('%'||upper(#{search})||'%') order by board_no desc)
			</when>
			<otherwise>
				where content like '%'||#{search}||'%' order by board_no desc)
			</otherwise>
		</choose>
    	where pagenum = #{pageNo}
	</select> -->
	
	<update id="addCount" parameterType="int">
		update board set board_count = board_count+1 where board_no = #{boardNo}
	</update>
	
	<delete id="deleteBoard" parameterType="int">
		delete from board where board_no = #{boardNo}
	</delete>
</mapper>